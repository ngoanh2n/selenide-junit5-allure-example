//file:noinspection GroovyAssignabilityCheck
/**
 * Author: ngoanh2n
 * @see <a href="https://docs.gradle.org/current/userguide/java_testing.html">Testing in Java & JVM projects</a>
 * @see <a href="https://docs.gradle.org/current/dsl/org.gradle.api.reporting.ReportingExtension.html">ReportingExtension</a>
 */

reporting {
    baseDir = layout.buildDirectory.locationOnly.get().file("reports").asFile
    testResultsDirName = reporting.baseDir
}

test {
    /*
    * Tell Gradle we want to use JUnit5 to discover and execute the tests (default to JUnit4).
    * */
    useJUnitPlatform {
        /*
        * Filter by engines
        * */
        includeEngines("junit-jupiter")
        //excludeEngines("junit-vintage")

        /*
        * Filter by tags
        * */
        //includeTags "fast", "smoke"
        //excludeTags "slow", "ci"
    }

    /*
    * Make failing tests do not fail the task
    * */
    ignoreFailures = true

    /*
    * That means outputs are not up to date.
    * Therefore you don't have to run 'clean' task if you have not updated any codes before executing the tests.
    * */
    outputs.upToDateWhen { false }

    /*
    * Tell Gradle we want to enable XML report output for JUnit.
    * */
    reports {
        junitXml {
            mergeReruns = true
            outputPerTestCase = true
        }
    }

    /*
    * Configure the logging of the test execution.
    * */
    testLogging {
        /*
        * Make the standard streams (err and out) visible at console when running tests.
        * */
        showStandardStreams = true

        /*
        * Expect PASSED, SKIPPED, FAILED test events to be logged.
        * */
        events "passed", "skipped", "failed"
    }

    /*
    * When the JVM starts, it uses the JVMs platform encoding
    * */
    systemProperty("file.encoding", "UTF-8")
    systemProperties.putAll(System.getProperties() as Map<?, ?>)
}
